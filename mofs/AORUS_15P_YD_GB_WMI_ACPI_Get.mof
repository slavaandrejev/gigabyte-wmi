[WMI, dynamic: ToInstance, provider("WmiProv"), Locale("MS\\0x409"), Description("Gigabyte WMI Get method"), guid("{ABBC0F6F-8EA1-11d1-00A0-C90629100000}")]
class GB_WMIACPI_Get
{
	[key, read] string InstanceName;
	[read] boolean Active;
	[WmiMethodId(70), Implemented, read, write, Description("Get CPU Fan Duty")] void GetCPUFanDuty([out, Description("Data")] uint8 Data);
	[WmiMethodId(71), Implemented, read, write, Description("Get GPU Fan Duty")] void GetGPUFanDuty([out, Description("Data")] uint8 Data);
	[WmiMethodId(72), Implemented, read, write, Description("Get Battery Cycle Count")] void GetBatteryCount([out, Description("Data")] uint16 Data);
	[WmiMethodId(73), Implemented, read, write, Description("Get Max Charge")] void GetMaxCharge([out, Description("Data")] uint8 Data);
	[WmiMethodId(80), Implemented, read, write, Description("Get PEG or SG")] void GetPEGorSG([out, Description("Data")] uint8 Data);
	[WmiMethodId(81), Implemented, read, write, Description("Get Nv Power Config")] void GetNvPowerConfig([out, Description("Data")] uint8 Data);
	[WmiMethodId(86), Implemented, read, write, Description("Get Thermal Sensor Data")] void GetThermalData([out, Description("Thermal1")] uint8 Thermal1, [out, Description("Thermal2")] uint8 Thermal2, [out, Description("Thermal3")] uint8 Thermal3);
	[WmiMethodId(87), Implemented, read, write, Description("Get Nv Thermal Target")] void GetNvThermalTarget([out, Description("Data")] uint8 Data);
	[WmiMethodId(88), Implemented, read, write, Description("Check Heavy Loading")] void CheckHeavyLoading([out, Description("Status")] uint8 Status);
	[WmiMethodId(89), Implemented, read, write, Description("Get Light Bar Status")] void GetLightBar([in, Description("Index")] uint8 Index, [out, Description("Status")] uint8 Status, [out, Description("Level")] uint8 Level, [out, Description("Red")] uint8 Red, [out, Description("Green")] uint8 Green, [out, Description("Blue")] uint8 Blue);
	[WmiMethodId(96), Implemented, read, write, Description("Get Deep Fan")] void GetDeepFan([out, Description("Temperature0")] uint8 Temperature0, [out, Description("Temperature1")] uint8 Temperature1, [out, Description("Temperature2")] uint8 Temperature2, [out, Description("Temperature3")] uint8 Temperature3, [out, Description("Temperature4")] uint8 Temperature4, [out, Description("Speed0")] uint8 Speed0, [out, Description("Speed1")] uint8 Speed1, [out, Description("Speed2")] uint8 Speed2, [out, Description("Speed3")] uint8 Speed3, [out, Description("Speed4")] uint8 Speed4);
	[WmiMethodId(97), Implemented, read, write, Description("Get Battery Health Status")] void GetBatteryHealth([out, Description("Data")] uint8 Data);
	[WmiMethodId(98), Implemented, read, write, Description("Get Fan Health Status")] void GetFanHealth([out, Description("Data")] uint8 Data);
	[WmiMethodId(99), Implemented, read, write, Description("Get Power On Time")] void GetPowerOnTime([out, Description("Year")] uint8 Year, [out, Description("Month")] uint8 Month, [out, Description("Day")] uint8 Day, [out, Description("Hour")] uint8 Hour, [out, Description("Minute")] uint8 Minute);
	[WmiMethodId(100), Implemented, read, write, Description("Get Charge Policy")] void GetChargePolicy([out, Description("Data")] uint16 Data);
	[WmiMethodId(101), Implemented, read, write, Description("Get Charge Stop")] void GetChargeStop([out, Description("Data")] uint16 Data);
	[WmiMethodId(103), Implemented, read, write, Description("Get 10 Steps Fan Status")] void GetStepFanStatus([out, Description("Data")] uint16 Data);
	[WmiMethodId(104), Implemented, read, write, Description("Get Fan Index Value")] void GetFanIndexValue([in, Description("Index")] uint8 Index, [out, Description("Temperature")] uint8 Temperture, [out, Description("Speed")] uint8 Value);
	[WmiMethodId(105), Implemented, read, write, Description("Get VR Mode Status")] void GetVRStatus([out, Description("Data")] uint16 Data);
	[WmiMethodId(106), Implemented, read, write, Description("Get Fixed Fan Status")] void GetFixedFanStatus([out, Description("Data")] uint16 Data);
	[WmiMethodId(107), Implemented, read, write, Description("Get Fixed Fan Speed")] void GetFixedFanSpeed([out, Description("Data")] uint16 Data);
	[WmiMethodId(108), Implemented, read, write, Description("Are Devices Exist")] void IsDeviceExist([out, Description("Data")] uint16 Data);
	[WmiMethodId(109), Implemented, read, write, Description("Get Battery Cycles1")] void getBattCyc1([out, Description("Data")] uint16 Data);
	[WmiMethodId(110), Implemented, read, write, Description("Get Battery Cycles")] void getBattCyc([out, Description("Data")] uint16 Data);
	[WmiMethodId(111), Implemented, read, write, Description("Get Fan PWM status")] void GetFanPWMStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(112), Implemented, read, write, Description("Get Fan Adjust status")] void GetFanAdjustStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(113), Implemented, read, write, Description("Getting Auto Fan Status")] void GetAutoFanStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(122), Implemented, read, write, Description("Getting the USB charge under Sleep")] void GetSleepUSBCharge([out, Description("Data")] uint8 Data);
	[WmiMethodId(123), Implemented, read, write, Description("Getting the USB charge under Hibernation")] void GetHibernationUSBCharge([out, Description("Data")] uint8 Data);
	[WmiMethodId(124), Implemented, read, write, Description("Check UCF support")] void CheckUCFSupport([out, Description("Data")] uint8 Data);
	[WmiMethodId(125), Implemented, read, write, Description("Getting Fan Speed")] void GetFanSpeed([out, Description("Data")] uint8 Data);
	[WmiMethodId(126), Implemented, read, write, Description("Getting the Camera2 status")] void GetCamera2([out, Description("Data")] uint8 Data);
	[WmiMethodId(127), Implemented, read, write, Description("Getting the Touch Screen Support")] void GetTouchScreenSupport([out, Description("Data")] uint8 Data);
	[WmiMethodId(129), Implemented, read, write, Description("Getting AI Boost Status")] void GetAIBoostStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(130), Implemented, read, write, Description("Get First Date")] void GetFirstDate([out, Description("Year")] uint8 Year, [out, Description("Month")] uint8 Month, [out, Description("Day")] uint8 Day, [out, Description("Hour")] uint8 Hour, [out, Description("Minute")] uint8 Minute);
	[WmiMethodId(132), Implemented, read, write, Description("Getting Ec Value Boost Status")] void GetEcValueBoostStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(133), Implemented, read, write, Description("Getting Whisper Mode")] void GetWhisperMode([out, Description("Data")] uint8 Data);
	[WmiMethodId(192), Implemented, read, write, Description("Getting the brightness")] void GetBrightness([out, Description("Data")] uint8 Data);
	[WmiMethodId(193), Implemented, read, write, Description("Getting the Bluetooth status")] void GetBluetooth([out, Description("Data")] uint8 Data);
	[WmiMethodId(194), Implemented, read, write, Description("Getting the WiFi status")] void GetWiFi([out, Description("Data")] uint8 Data);
	[WmiMethodId(195), Implemented, read, write, Description("Getting the W35G status")] void GetW35G([out, Description("Data")] uint8 Data);
	[WmiMethodId(196), Implemented, read, write, Description("Getting the Brightness Off status")] void GetBirightnessOff([out, Description("Data")] uint8 Data);
	[WmiMethodId(197), Implemented, read, write, Description("Getting the Camera status")] void GetCamera([out, Description("Data")] uint8 Data);
	[WmiMethodId(202), Implemented, read, write, Description("Getting the TouchPad status")] void GetTouchPad([out, Description("Data")] uint8 Data);
	[WmiMethodId(203), Implemented, read, write, Description("Getting the Winkey blocking status")] void GetWinkeyBlocking([out, Description("Data")] uint8 Data);
	[WmiMethodId(206), Implemented, read, write, Description("Getting the Turbo Mode status")] void GetTurboMode([out, Description("Data")] uint8 Data);
	[WmiMethodId(208), Implemented, read, write, Description("Getting the Smart Charge status")] void GetSmartCharge([out, Description("Data")] uint8 Data);
	[WmiMethodId(209), Implemented, read, write, Description("Check the support status of Smart Charge")] void CheckSmartCharge([out, Description("Data")] uint8 Data);
	[WmiMethodId(210), Implemented, read, write, Description("Check the Support status of Smart Turbo")] void CheckSmartTurbo([out, Description("Data")] uint8 Data);
	[WmiMethodId(211), Implemented, read, write, Description("Getting the USB3.0 status")] void GetUSB30([out, Description("Data")] uint8 Data);
	[WmiMethodId(213), Implemented, read, write, Description("Check the support status of USB3.0")] void CheckUSB30([out, Description("Data")] uint8 Data);
	[WmiMethodId(214), Implemented, read, write, Description("Getting the Docking status")] void GetDockingStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(215), Implemented, read, write, Description("Getting the status of TouchScreen")] void GetTouchScreen([out, Description("Data")] uint8 Data);
	[WmiMethodId(219), Implemented, read, write, Description("Getting the level of SmartTurbo")] void GetSmartTurbo([out, Description("Data")] uint8 Data);
	[WmiMethodId(239), Implemented, read, write, Description("Get Lid status")] void GetLid1Status([out, Description("Data")] uint8 Data);
	[WmiMethodId(241), Implemented, read, write, Description("Getting the status of KeyboardMatrix")] void GetKeyboardMatrix([out, Description("Data")] uint8 Data);
	[WmiMethodId(242), Implemented, read, write, Description("Getting the Enable/Disable status of SmartTurbo")] void GetSmartTurboStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(243), Implemented, read, write, Description("Getting the Enable/Disable status of G-Sensor")] void GetGSensorStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(244), Implemented, read, write, Description("Getting the Enable/Disable status of Onboard LAN")] void GetOnboardLANStatus([out, Description("Data")] uint8 Data);
	[WmiMethodId(245), Implemented, read, write, Description("Check the support status of Docking")] void CheckDocking([out, Description("Data")] uint8 Data);
	[WmiMethodId(246), Implemented, read, write, Description("Get Key Board Back Light Level")] void GetKeyBoardBackLight([out, Description("Data")] uint8 Data);
	[WmiMethodId(247), Implemented, read, write, Description("Query Light Sensor Level")] void QueryLightSensor([out, Description("Data")] uint16 Data);
	[WmiMethodId(249), Implemented, read, write, Description("Query Thermal Sensor Level")] void QueryThermalSensor([out, Description("Data")] uint16 Data);
	[WmiMethodId(250), Implemented, read, write, Description("Query Smart Cool Status")] void GetSmartCool([out, Description("Data")] uint16 Data);
	[WmiMethodId(251), Implemented, read, write, Description("Get Light Sensor Version")] void GetLightSensorVersion([out, Description("Data")] uint16 Data);
	[WmiMethodId(252), Implemented, read, write, Description("Check BIOS Mode")] void CheckBIOSMode([out, Description("Data")] uint16 Data);
	[WmiMethodId(254), Implemented, read, write, Description("Check 3G Module")] void Check3GModule([out, Description("Data")] uint16 Data);
	[WmiMethodId(225), Implemented, read, write, Description("getCpuTemperature")] void getCpuTemp([out, Description("Data")] uint16 Data);
	[WmiMethodId(226), Implemented, read, write, Description("getGpuTemperature1")] void getGpuTemp1([out, Description("Data")] uint16 Data);
	[WmiMethodId(227), Implemented, read, write, Description("getGpuTemperature2")] void getGpuTemp2([out, Description("Data")] uint16 Data);
	[WmiMethodId(228), Implemented, read, write, Description("getRpm1")] void getRpm1([out, Description("Data")] uint16 Data);
	[WmiMethodId(229), Implemented, read, write, Description("getRpm2")] void getRpm2([out, Description("Data")] uint16 Data);
	[WmiMethodId(230), Implemented, read, write, Description("Get PEG2 or SG2")] void GetPEG2orSG2([out, Description("Data")] uint8 Data);
	[WmiMethodId(231), Implemented, read, write, Description("Get DynamicBoost Status")] void GetDynamicBoostStatus([out, Description("Data")] uint8 Data);
};
